---
title: "Class 5: Data Viz with ggplot"
author: "Sarah Mirsaidi Madjdabadi, A16890186"
format: pdf
toc: true
---

# Background

There are many graphics system available in R. These include "base" R and tons of add on packes like **ggplot2**.

Let's compare "base" and **ggplot2** briefly. We can use some example data that is built-in with R called `cars`:

```{r}
head(cars)
```

In base R I can just call 'plot()'

```{r}
plot(cars)
```

How can we do this with **ggplot2**.

First we need to install the package. We do this `install.packages("ggplot2")`. I only need to do this once and it will be available on my computer from then on. 

> Key point: I only install packages in the R console not within quarto docs or Rscripts.

Before I use any add-on package, I must load it up with a call to `library()`

```{r}
library(ggplot2)
ggplot(cars)
```

Every ggplot has at least three things:

- the **data** (in our case `cars`)
- the **aes**thetics (how the data map to plot)
- the **geom**etries that determine how the plot is drawn (lines, points, columns, etc.)

```{r}
ggplot(cars) +
  aes(x=speed, y=dist)
```

```{r}
ggplot(cars) +
  aes(x=speed, y=dist) +
  geom_point()
```

For "simple" plots, ggplot is much more verbose than base R, but the defaults are nicer and for complicated plots it becomes much more efficient and structured.

> Q. Add a line to show the relationship between speed and stopping distance (i.e. add another "layer")

```{r}
ggplot(cars) +
  aes(x=speed, y=dist) +
  geom_point() +
  geom_line()
```


```{r}
p <- ggplot(cars) +
  aes(x=speed, y=dist) +
  geom_point() +
  geom_smooth(se=FALSE, method="lm")
```

I can always save any ggplot object (i.e. plot) and thn use it later for adding more layers.
```{r}
p 
```


> Q. Add a title and subtitle to the plot

```{r}
p + labs(title="My First ggplot",
         subtitle = "Stopping distance of old cars",
         caption = "BIMM143",
         x="Speed (mph)",
         y="Stopping distance (ft)") +
  theme_bw()
```

# Gene expression plot

Read input data into R

```{r}
url <- "https://bioboot.github.io/bimm143_S20/class-material/up_down_expression.txt"
genes <- read.delim(url)
head(genes)
```

> Q. How many genes are in these dataset? 5196

```{r}
nrow(genes) 
```

> Q. How many columns are there?

```{r}
ncol(genes)
```

> Q. What are the column names?

```{r}
colnames(genes)
```

> Q. How many "up" and "down" regulated genes are there?

```{r}
table(genes$State)
```

# Custom Color Plot

> Q. Make a first plot of this data

```{r}
ggplot(genes) +
  aes(x=Condition1, y=Condition2, col=State) +
  geom_point() +
  scale_colour_manual( values=c("pink","lightblue","violet") ) +
  labs(title="Gene Expression Changes Upon Drug Treatment",
       x="Control (no drug)",
       y="Drug Treatment") + theme_bw()
```


# Using different geoms

Let's plot some aspects of the in-built `mtcars` dataset.

```{r}
head(mtcars)
```

> Q. Scatter plot of `mpg` vs. `disp`

```{r}
p1 <- ggplot(mtcars) +
  aes(mpg, disp) +
  geom_point()

p1
```


> Q. Boxplot of `gear` vs. `disp`

```{r}
p2 <- ggplot(mtcars) +
  aes(gear, disp, group = gear) +
  geom_boxplot()

p2
```


> Q. Barplot of `carb`

```{r}
p3 <- ggplot(mtcars) +
  aes(carb) +
  geom_bar()

p3
```


> Q. Smooth of `disp` vs `qsec`

```{r}
p4 <- ggplot(mtcars) +
  aes(disp, qsec) +
  geom_smooth()

p4
```

What if we wanna compile all these plots into one figure w/ multiple panels?
> Use **Patchwork** package!

```{r}
library(patchwork)
```

# Patchwork
```{r}
(p1 | p2 | p3) /
      p4
```

```{r}
ggsave(filename = "myplot.png", width=5, height=3)
```

# Gapminder

```{r}
url <- "https://raw.githubusercontent.com/jennybc/gapminder/master/inst/extdata/gapminder.tsv"

gapminder <- read.delim(url)

head(gapminder)
```

> Q. How many countries are in this data set?

```{r}
length(table(gapminder$country))
```

> Q. Plot GDP vs. life expectancy (color by continent)

```{r}
ggplot(gapminder) +
  aes(gdpPercap, lifeExp, col=continent) +
  geom_point(alpha=0.3) +
  facet_wrap(~continent) +
  theme_bw()
```

